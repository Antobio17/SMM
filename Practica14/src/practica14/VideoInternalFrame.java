/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica14;

import java.awt.image.BufferedImage;
import java.io.File;
import uk.co.caprica.vlcj.component.EmbeddedMediaPlayerComponent;
import uk.co.caprica.vlcj.player.MediaPlayerEventListener;
import uk.co.caprica.vlcj.player.embedded.EmbeddedMediaPlayer;

/**
 *
 * @author Antonio Jiménez Rodríguez
 */
public class VideoInternalFrame extends javax.swing.JInternalFrame {

    /******************************* PROPERTIES ******************************/
    
    private EmbeddedMediaPlayer vlcPlayer = null;
    private File fMedia;

    /******************************* CONSTRUCTS ******************************/
    
    /**
     * Creates new form VideoInternalFrame
     */
    private VideoInternalFrame(File f) {
        initComponents();
        fMedia = f;
        EmbeddedMediaPlayerComponent aVisual = new EmbeddedMediaPlayerComponent();
        getContentPane().add(aVisual, java.awt.BorderLayout.CENTER);
        vlcPlayer = aVisual.getMediaPlayer();
    }

    /*************************** GETTER AND SETTER ***************************/
    
    /***************************** PUBLIC METHODS ****************************/
    
    /**
     * Metodo que obtiene una instancia de la clase VideoInternalFrame.
     * 
     * @param f File: archivo de video a reproducir.
     * 
     * @return VideoInternalFrame instancia de la clase VideoInternalFrame.
     */
    public static VideoInternalFrame getInstance(File f)
    {
        VideoInternalFrame videoInternalFrame = new VideoInternalFrame(f);
        return (videoInternalFrame.vlcPlayer != null ? videoInternalFrame : null);
    }
    
    /**
     * Método para activar la reproducción del vídeo.
     * 
     */
    public void play() {
        if (vlcPlayer != null) {
            if (vlcPlayer.isPlayable()) {
                //Si se estaba reproduciendo
                vlcPlayer.play();
            } else {
                vlcPlayer.playMedia(fMedia.getAbsolutePath());
            }
        }
    }

    /**
     * Método para parar la reproducción del vídeo.
     * 
     */
    public void stop() {
        if (vlcPlayer != null) {
            if (vlcPlayer.isPlaying()) {
                vlcPlayer.pause();
            }else {
                vlcPlayer.stop();
            }
        }
    }
    
    /**
     * Método para asociar un manejador de Eventos al reproductor.
     * 
     * @param ml MediaPlayerEventListener manejador de ecentos de MediaPlayer.
     */
    public void addMediaPlayerEventListener(MediaPlayerEventListener ml) {
        if (vlcPlayer != null) {
            vlcPlayer.addMediaPlayerEventListener(ml);
        }
    }
    
    /**
     * Método que obtiene una instantanea del frame actual de la webcam.
     * 
     * @return BufferedImage instantanea del frame actual de la webcam.
     */
    public BufferedImage getImage()
    {
        return vlcPlayer != null ? vlcPlayer.getSnapshot() : null;
    }
    
    
    /***************************** PRIVARE METHODS ***************************/
    
    /************************** JAVA GENERATED CODE **************************/

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        setBounds(0, 0, 410, 308);
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        if(vlcPlayer != null){
            vlcPlayer.stop();
            vlcPlayer = null;
        }
    }//GEN-LAST:event_formInternalFrameClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
